/* mruby_vala.h generated by valac 0.28.1, the Vala compiler, do not modify */


#ifndef __MRUBY_VALA_H__
#define __MRUBY_VALA_H__

#include <glib.h>
#include <glib-object.h>
#include <mruby.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS


#define MRUBY_TYPE_VALUE (mruby_value_get_type ())
#define MRUBY_VALUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MRUBY_TYPE_VALUE, MRubyValue))
#define MRUBY_VALUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MRUBY_TYPE_VALUE, MRubyValueClass))
#define MRUBY_IS_VALUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MRUBY_TYPE_VALUE))
#define MRUBY_IS_VALUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MRUBY_TYPE_VALUE))
#define MRUBY_VALUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MRUBY_TYPE_VALUE, MRubyValueClass))

typedef struct _MRubyValue MRubyValue;
typedef struct _MRubyValueClass MRubyValueClass;

#define MRUBY_TYPE_TT (mruby_tt_get_type ())
typedef mrb_state MRubyContext;
typedef struct _MRubyValuePrivate MRubyValuePrivate;

#define MRUBY_TYPE_SYMBOL (mruby_symbol_get_type ())
typedef mrb_sym MRubySymbol;

#define MRUBY_TYPE_MRB_FUNC_ENV (mruby_mrb_func_env_get_type ())
#define MRUBY_MRB_FUNC_ENV(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MRUBY_TYPE_MRB_FUNC_ENV, MRubyMRbFuncEnv))
#define MRUBY_MRB_FUNC_ENV_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MRUBY_TYPE_MRB_FUNC_ENV, MRubyMRbFuncEnvClass))
#define MRUBY_IS_MRB_FUNC_ENV(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MRUBY_TYPE_MRB_FUNC_ENV))
#define MRUBY_IS_MRB_FUNC_ENV_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MRUBY_TYPE_MRB_FUNC_ENV))
#define MRUBY_MRB_FUNC_ENV_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MRUBY_TYPE_MRB_FUNC_ENV, MRubyMRbFuncEnvClass))

typedef struct _MRubyMRbFuncEnv MRubyMRbFuncEnv;
typedef struct _MRubyMRbFuncEnvClass MRubyMRbFuncEnvClass;
typedef struct _MRubyMRbFuncEnvPrivate MRubyMRbFuncEnvPrivate;

#define MRUBY_TYPE_OBJECT (mruby_object_get_type ())
#define MRUBY_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MRUBY_TYPE_OBJECT, MRubyObject))
#define MRUBY_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MRUBY_TYPE_OBJECT, MRubyObjectClass))
#define MRUBY_IS_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MRUBY_TYPE_OBJECT))
#define MRUBY_IS_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MRUBY_TYPE_OBJECT))
#define MRUBY_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MRUBY_TYPE_OBJECT, MRubyObjectClass))

typedef struct _MRubyObject MRubyObject;
typedef struct _MRubyObjectClass MRubyObjectClass;
typedef struct _MRubyObjectPrivate MRubyObjectPrivate;

#define MRUBY_TYPE_ARRAY (mruby_array_get_type ())
#define MRUBY_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MRUBY_TYPE_ARRAY, MRubyArray))
#define MRUBY_ARRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MRUBY_TYPE_ARRAY, MRubyArrayClass))
#define MRUBY_IS_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MRUBY_TYPE_ARRAY))
#define MRUBY_IS_ARRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MRUBY_TYPE_ARRAY))
#define MRUBY_ARRAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MRUBY_TYPE_ARRAY, MRubyArrayClass))

typedef struct _MRubyArray MRubyArray;
typedef struct _MRubyArrayClass MRubyArrayClass;
typedef struct _MRubyArrayPrivate MRubyArrayPrivate;

#define MRUBY_TYPE_STRING (mruby_string_get_type ())
#define MRUBY_STRING(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MRUBY_TYPE_STRING, MRubyString))
#define MRUBY_STRING_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MRUBY_TYPE_STRING, MRubyStringClass))
#define MRUBY_IS_STRING(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MRUBY_TYPE_STRING))
#define MRUBY_IS_STRING_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MRUBY_TYPE_STRING))
#define MRUBY_STRING_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MRUBY_TYPE_STRING, MRubyStringClass))

typedef struct _MRubyString MRubyString;
typedef struct _MRubyStringClass MRubyStringClass;
typedef struct _MRubyStringPrivate MRubyStringPrivate;

#define MRUBY_TYPE_MODULE (mruby_module_get_type ())
#define MRUBY_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MRUBY_TYPE_MODULE, MRubyModule))
#define MRUBY_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MRUBY_TYPE_MODULE, MRubyModuleClass))
#define MRUBY_IS_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MRUBY_TYPE_MODULE))
#define MRUBY_IS_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MRUBY_TYPE_MODULE))
#define MRUBY_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MRUBY_TYPE_MODULE, MRubyModuleClass))

typedef struct _MRubyModule MRubyModule;
typedef struct _MRubyModuleClass MRubyModuleClass;
typedef struct _MRubyModulePrivate MRubyModulePrivate;

#define MRUBY_TYPE_CLASS (mruby_class_get_type ())
#define MRUBY_CLASS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MRUBY_TYPE_CLASS, MRubyClass))
#define MRUBY_CLASS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MRUBY_TYPE_CLASS, MRubyClassClass))
#define MRUBY_IS_CLASS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MRUBY_TYPE_CLASS))
#define MRUBY_IS_CLASS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MRUBY_TYPE_CLASS))
#define MRUBY_CLASS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MRUBY_TYPE_CLASS, MRubyClassClass))

typedef struct _MRubyClass MRubyClass;
typedef struct _MRubyClassClass MRubyClassClass;
typedef struct _MRubyClassPrivate MRubyClassPrivate;

typedef enum  {
	MRUBY_TT_FALSE = 0,
	MRUBY_TT_FREE,
	MRUBY_TT_TRUE,
	MRUBY_TT_FIXNUM,
	MRUBY_TT_SYMBOL,
	MRUBY_TT_UNDEF,
	MRUBY_TT_FLOAT,
	MRUBY_TT_CPTR,
	MRUBY_TT_OBJECT,
	MRUBY_TT_CLASS,
	MRUBY_TT_MODULE,
	MRUBY_TT_ICLASS,
	MRUBY_TT_SCLASS,
	MRUBY_TT_PROC,
	MRUBY_TT_ARRAY,
	MRUBY_TT_HASH,
	MRUBY_TT_STRING,
	MRUBY_TT_RANGE,
	MRUBY_TT_EXCEPTION,
	MRUBY_TT_FILE,
	MRUBY_TT_ENV,
	MRUBY_TT_DATA,
	MRUBY_TT_FIBER,
	MRUBY_TT_MAXDEFINE
} MRubyTT;

struct _MRubyValue {
	GObject parent_instance;
	MRubyValuePrivate * priv;
	mrb_value actual;
	MRubyContext* mrb;
};

struct _MRubyValueClass {
	GObjectClass parent_class;
};

typedef GValue* (*MRubyFuncCB) (MRubyContext* mrb, MRubyValue* _self_, void* user_data);
struct _MRubyMRbFuncEnv {
	GObject parent_instance;
	MRubyMRbFuncEnvPrivate * priv;
	MRubyFuncCB fun;
	gpointer fun_target;
	GDestroyNotify fun_target_destroy_notify;
};

struct _MRubyMRbFuncEnvClass {
	GObjectClass parent_class;
};

struct _MRubyObject {
	MRubyValue parent_instance;
	MRubyObjectPrivate * priv;
};

struct _MRubyObjectClass {
	MRubyValueClass parent_class;
};

struct _MRubyArray {
	MRubyObject parent_instance;
	MRubyArrayPrivate * priv;
};

struct _MRubyArrayClass {
	MRubyObjectClass parent_class;
};

struct _MRubyString {
	MRubyObject parent_instance;
	MRubyStringPrivate * priv;
};

struct _MRubyStringClass {
	MRubyObjectClass parent_class;
};

struct _MRubyModule {
	GObject parent_instance;
	MRubyModulePrivate * priv;
};

struct _MRubyModuleClass {
	GObjectClass parent_class;
};

struct _MRubyClass {
	MRubyModule parent_instance;
	MRubyClassPrivate * priv;
};

struct _MRubyClassClass {
	MRubyModuleClass parent_class;
};


GType mruby_value_get_type (void) G_GNUC_CONST;
void* mruby_cptr (MRubyValue* val);
MRubyValue* mruby_nil_value (void);
MRubyValue* mruby_true_value (void);
MRubyValue* mruby_false_value (void);
MRubyValue* mruby_bool_value (gboolean val);
MRubyValue* mruby_fixnum_value (gint val);
void* mruby_obj_ptr (MRubyValue* obj);
void* mruby_class_ptr (MRubyValue* kls);
gint mruby_fixnum (MRubyValue* v);
gboolean mruby_test (MRubyValue* v);
GType mruby_tt_get_type (void) G_GNUC_CONST;
MRubyTT mruby_type (MRubyValue* v);
void* mruby_nil_p (MRubyValue* v);
MRubyValue** mruby_mrb2vary (mrb_value* m, int m_length1, gint* a, int* result_length1);
mrb_value* mruby_vary2mrb (MRubyValue** a, int a_length1, int* result_length1);
GValue* mruby_mrb2gval (MRubyContext* mrb, MRubyValue* m);
MRubyValue* mruby_gval2mrb (MRubyContext* mrb, GValue* val);
MRubyValue* mruby_value_new (mrb_value act, MRubyContext* mrb);
MRubyValue* mruby_value_construct (GType object_type, mrb_value act, MRubyContext* mrb);
gchar* mruby_value_to_string (MRubyValue* self, MRubyContext* c);
MRubyContext* mruby_value_get_context (MRubyValue* self, MRubyContext* c);
GType mruby_symbol_get_type (void) G_GNUC_CONST;
MRubySymbol* mruby_symbol_dup (const MRubySymbol* self);
void mruby_symbol_free (MRubySymbol* self);
GType mruby_mrb_func_env_get_type (void) G_GNUC_CONST;
MRubyMRbFuncEnv* mruby_mrb_func_env_new (MRubyFuncCB cb, void* cb_target);
MRubyMRbFuncEnv* mruby_mrb_func_env_construct (GType object_type, MRubyFuncCB cb, void* cb_target);
GType mruby_object_get_type (void) G_GNUC_CONST;
MRubyObject* mruby_obj_value (void* obj);
GType mruby_array_get_type (void) G_GNUC_CONST;
MRubyArray* mruby_array_new (MRubyContext* mrb);
MRubyArray* mruby_array_construct (GType object_type, MRubyContext* mrb);
MRubyArray* mruby_array_new_from (mrb_value act, MRubyContext* c);
MRubyArray* mruby_array_construct_from (GType object_type, mrb_value act, MRubyContext* c);
MRubyObject* mruby_array_context_get (MRubyArray* self, gint idx, MRubyContext* c);
void mruby_array_context_set (MRubyArray* self, gint i, MRubyValue* val, MRubyContext* ctx);
void mruby_array_set (MRubyArray* self, gint i, MRubyValue* v);
MRubyObject* mruby_array_get (MRubyArray* self, gint i);
void mruby_array_concat (MRubyArray* self, MRubyObject* foo2, MRubyContext* ctx);
MRubyObject* mruby_array_splat (MRubyArray* self, MRubyContext* ctx);
void mruby_array_push (MRubyArray* self, MRubyObject* foo2, MRubyContext* ctx);
MRubyObject* mruby_array_pop (MRubyArray* self, MRubyContext* ctx);
void mruby_array_replace (MRubyArray* self, MRubyObject* b, MRubyContext* ctx);
MRubyObject* mruby_array_unshift (MRubyArray* self, MRubyObject* item, MRubyContext* ctx);
MRubyObject* mruby_array_shift (MRubyArray* self, MRubyContext* ctx);
MRubyObject* mruby_array_clear (MRubyArray* self, MRubyContext* ctx);
MRubyObject* mruby_array_join (MRubyArray* self, MRubyObject* sep, MRubyContext* ctx);
MRubyObject* mruby_array_resize (MRubyArray* self, gint len, MRubyContext* ctx);
gint mruby_array_get_length (MRubyArray* self);
gint mruby_array_get_size (MRubyArray* self);
GType mruby_string_get_type (void) G_GNUC_CONST;
MRubyString* mruby_string_new_from (mrb_value act, MRubyContext* mrb);
MRubyString* mruby_string_construct_from (GType object_type, mrb_value act, MRubyContext* mrb);
MRubyString* mruby_string_new (MRubyContext* mrb, const gchar* cstr);
MRubyString* mruby_string_construct (GType object_type, MRubyContext* mrb, const gchar* cstr);
MRubyObject* mruby_object_new_from (mrb_value act, MRubyContext* mrb);
MRubyObject* mruby_object_construct_from (GType object_type, mrb_value act, MRubyContext* mrb);
MRubyObject* mruby_object_new (MRubyContext* mrb, void* cls, MRubyValue** argv, int argv_length1);
MRubyObject* mruby_object_construct (GType object_type, MRubyContext* mrb, void* cls, MRubyValue** argv, int argv_length1);
MRubyObject* mruby_object_dup (MRubyObject* self, MRubyContext* c);
MRubyObject* mruby_object_clone (MRubyObject* self, MRubyContext* c);
MRubyString* mruby_object_as_string (MRubyObject* self, MRubyContext* ctx);
MRubyObject* mruby_object_instance_variables (MRubyObject* self, MRubyContext* ctx);
gboolean mruby_object_respond_to (MRubyObject* self, MRubySymbol mid, MRubyContext* ctx);
MRubySymbol mruby_object_to_sym (MRubyObject* self, MRubyContext* ctx);
gboolean mruby_object_eq (MRubyObject* self, MRubyObject* foo2, MRubyContext* ctx);
gboolean mruby_object_equal (MRubyObject* self, MRubyObject* foo2, MRubyContext* ctx);
gchar* mruby_object_classname (MRubyObject* self, MRubyContext* ctx);
void* mruby_object_class (MRubyObject* self, MRubyContext* ctx);
gboolean mruby_object_is_kind_of (MRubyObject* self, void* c, MRubyContext* ctx);
MRubyObject* mruby_object_inspect (MRubyObject* self, MRubyContext* ctx);
gboolean mruby_object_is_instance_of (MRubyObject* self, void* c, MRubyContext* ctx);
GType mruby_module_get_type (void) G_GNUC_CONST;
MRubyValue* mruby_module_get_value (MRubyModule* self);
MRubyModule* mruby_module_new (void* pointer);
MRubyModule* mruby_module_construct (GType object_type, void* pointer);
MRubyModule* mruby_module_new_from_value (MRubyValue* value);
MRubyModule* mruby_module_construct_from_value (GType object_type, MRubyValue* value);
MRubyModule* mruby_module_new_define (MRubyContext* mrb, const gchar* name, MRubyModule* under);
MRubyModule* mruby_module_construct_define (GType object_type, MRubyContext* mrb, const gchar* name, MRubyModule* under);
MRubyModule* mruby_module_new_create (MRubyContext* mrb);
MRubyModule* mruby_module_construct_create (GType object_type, MRubyContext* mrb);
MRubyModule* mruby_module_new_get (MRubyContext* mrb, const gchar* name);
MRubyModule* mruby_module_construct_get (GType object_type, MRubyContext* mrb, const gchar* name);
void mruby_module_define_method (MRubyModule* self, MRubyContext* mrb, const gchar* name, MRubyFuncCB cb, void* cb_target);
void mruby_module_define_static_method (MRubyModule* self, MRubyContext* mrb, const gchar* name, MRubyFuncCB cb, void* cb_target);
MRubyValue* mruby_module_invoke_func_with_env (MRubyContext* mrb, MRubyValue* _self_);
void* mruby_module_get_pointer (MRubyModule* self);
void mruby_module_set_pointer (MRubyModule* self, void* value);
GType mruby_class_get_type (void) G_GNUC_CONST;
MRubyClass* mruby_class_new (void* pointer);
MRubyClass* mruby_class_construct (GType object_type, void* pointer);
MRubyClass* mruby_class_new_define (MRubyContext* mrb, const gchar* name, MRubyClass* super, MRubyModule* under);
MRubyClass* mruby_class_construct_define (GType object_type, MRubyContext* mrb, const gchar* name, MRubyClass* super, MRubyModule* under);
MRubyClass* mruby_class_new_create (MRubyContext* mrb, MRubyClass* super);
MRubyClass* mruby_class_construct_create (GType object_type, MRubyContext* mrb, MRubyClass* super);
MRubyClass* mruby_class_new_get (MRubyContext* mrb, const gchar* name);
MRubyClass* mruby_class_construct_get (GType object_type, MRubyContext* mrb, const gchar* name);
MRubyValue** mruby_context_args (MRubyContext* self, gint* len, int* result_length1);
void mruby_context_define_method (MRubyContext* self, const gchar* name, MRubyFuncCB cb, void* cb_target);
MRubyClass* mruby_context_class_get (MRubyContext* self, const gchar* name);
MRubyModule* mruby_context_module_get (MRubyContext* self, const gchar* name);
MRubyObject* mruby_context_float_value (MRubyContext* self, gfloat val);
MRubyObject* mruby_context_cptr_value (MRubyContext* self, void* val);
gint mruby_context_ary_len (MRubyContext* self, MRubyValue* val);
MRubyObject* mruby_context_obj_new (MRubyContext* self, void* cls, MRubyValue** argv, int argv_length1);
MRubyObject* mruby_context_load_string (MRubyContext* self, const gchar* str);
void mruby_context_sys_fail (MRubyContext* self, const gchar* mesg);
MRubyObject* mruby_context_exc_new_str (MRubyContext* self, void* c, MRubyValue* str);
MRubyObject* mruby_context_exc_backtrace (MRubyContext* self, MRubyValue* exc);
MRubyObject* mruby_context_get_backtrace (MRubyContext* self);
MRubyObject* mruby_context_f_raise (MRubyContext* self, MRubyValue* foo1);
void mruby_context_str_concat (MRubyContext* self, MRubyValue* foo1, MRubyValue* foo2);
MRubyObject* mruby_context_str_plus (MRubyContext* self, MRubyValue* foo1, MRubyValue* foo2);
MRubyObject* mruby_context_ptr_to_str (MRubyContext* self, void* foo1);
MRubyString* mruby_context_obj_as_string (MRubyContext* self, MRubyValue* obj);
MRubyObject* mruby_context_str_resize (MRubyContext* self, MRubyValue* str, gint len);
MRubyObject* mruby_context_str_substr (MRubyContext* self, MRubyValue* str, gint beg, gint len);
MRubyObject* mruby_context_string_type (MRubyContext* self, MRubyValue* str);
MRubyObject* mruby_context_check_string_type (MRubyContext* self, MRubyValue* str);
MRubyObject* mruby_context_str_buf_new (MRubyContext* self, gsize capa);
gchar* mruby_context_string_value_ptr (MRubyContext* self, MRubyValue* ptr);
MRubyObject* mruby_context_str_dup (MRubyContext* self, MRubyValue* str);
MRubyObject* mruby_context_str_intern (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_str_to_inum (MRubyContext* self, MRubyValue* str, gint _base, gboolean badcheck);
MRubyObject* mruby_context_str_to_str (MRubyContext* self, MRubyValue* str);
gboolean mruby_context_str_equal (MRubyContext* self, MRubyValue* str1, MRubyValue* str2);
MRubyObject* mruby_context_str_cat (MRubyContext* self, MRubyValue* str, const gchar* ptr, gsize len);
MRubyObject* mruby_context_str_cat_cstr (MRubyContext* self, MRubyValue* str, const gchar* ptr);
MRubyObject* mruby_context_str_cat_str (MRubyContext* self, MRubyValue* str, MRubyValue* str2);
MRubyObject* mruby_context_str_append (MRubyContext* self, MRubyValue* str, MRubyValue* str2);
gchar* mruby_context_str_to_cstr (MRubyContext* self, MRubyValue* str);
MRubyObject* mruby_context_str_pool (MRubyContext* self, MRubyValue* str);
gint mruby_context_str_hash (MRubyContext* self, MRubyValue* str);
MRubyObject* mruby_context_str_dump (MRubyContext* self, MRubyValue* str);
MRubyObject* mruby_context_str_inspect (MRubyContext* self, MRubyValue* str);
void mruby_context_noregexp (MRubyContext* self, MRubyValue* _self_);
void mruby_context_regexp_check (MRubyContext* self, MRubyValue* obj);
MRubyObject* mruby_context_range_new (MRubyContext* self, MRubyValue* foo1, MRubyValue* foo2, gboolean foo3);
void* mruby_context_define_class_id (MRubyContext* self, MRubySymbol foo1, void* foo2);
void* mruby_context_define_module_id (MRubyContext* self, MRubySymbol foo1);
void* mruby_context_vm_define_class (MRubyContext* self, MRubyValue* foo1, MRubyValue* foo2, MRubySymbol foo3);
void* mruby_context_vm_define_module (MRubyContext* self, MRubyValue* foo1, MRubySymbol foo2);
void mruby_context_define_method_raw (MRubyContext* self, void* foo1, MRubySymbol foo2, void* foo3);
void mruby_context_define_method_id (MRubyContext* self, void* c, MRubySymbol mid, mrb_func_t func, guint32 aspec);
void mruby_context_alias_method (MRubyContext* self, void* c, MRubySymbol a, MRubySymbol b);
void* mruby_context_class_outer_module (MRubyContext* self, void* foo1);
void* mruby_context_method_search (MRubyContext* self, void* foo1, MRubySymbol foo2);
void mruby_context_gc_mark_mt (MRubyContext* self, void* foo1);
gsize mruby_context_gc_mark_mt_size (MRubyContext* self, void* foo1);
void mruby_context_gc_free_mt (MRubyContext* self, void* foo1);
MRubyObject* mruby_context_flo_to_fixnum (MRubyContext* self, MRubyValue* val);
MRubyObject* mruby_context_float_to_str (MRubyContext* self, MRubyValue* x, const gchar* fmt);
gfloat mruby_context_to_flo (MRubyContext* self, MRubyValue* x);
MRubyObject* mruby_context_fixnum_plus (MRubyContext* self, MRubyValue* x, MRubyValue* y);
MRubyObject* mruby_context_fixnum_minus (MRubyContext* self, MRubyValue* x, MRubyValue* y);
MRubyObject* mruby_context_fixnum_mul (MRubyContext* self, MRubyValue* x, MRubyValue* y);
MRubyObject* mruby_context_num_div (MRubyContext* self, MRubyValue* x, MRubyValue* y);
void* mruby_context_proc_new_cfunc (MRubyContext* self, mrb_func_t foo1);
MRubyObject* mruby_context_f_send (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_proc_cfunc_env_get (MRubyContext* self, gint foo1);
MRubyObject* mruby_context_ary_new_capa (MRubyContext* self, gint foo1);
MRubyArray* mruby_context_ary_new (MRubyContext* self);
MRubyArray* mruby_context_ary_new_from_values (MRubyContext* self, gint size, MRubyValue** vals, int vals_length1);
MRubyObject* mruby_context_assoc_new (MRubyContext* self, MRubyValue* car, MRubyValue* cdr);
void mruby_context_ary_concat (MRubyContext* self, MRubyValue* foo1, MRubyValue* foo2);
MRubyObject* mruby_context_ary_splat (MRubyContext* self, MRubyValue* foo1);
void mruby_context_ary_push (MRubyContext* self, MRubyValue* foo1, MRubyValue* foo2);
MRubyObject* mruby_context_ary_pop (MRubyContext* self, MRubyValue* ary);
MRubyObject* mruby_context_ary_ref (MRubyContext* self, MRubyValue* ary, gint n);
void mruby_context_ary_set (MRubyContext* self, MRubyValue* ary, gint n, MRubyValue* val);
void mruby_context_ary_replace (MRubyContext* self, MRubyValue* a, MRubyValue* b);
MRubyObject* mruby_context_check_array_type (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_ary_unshift (MRubyContext* self, MRubyValue* _self_, MRubyValue* item);
MRubyObject* mruby_context_ary_shift (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_ary_clear (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_ary_join (MRubyContext* self, MRubyValue* ary, MRubyValue* sep);
MRubyObject* mruby_context_ary_resize (MRubyContext* self, MRubyValue* ary, gint len);
MRubyObject* mruby_context_hash_new (MRubyContext* self);
void mruby_context_hash_set (MRubyContext* self, MRubyValue* hash, MRubyValue* key, MRubyValue* val);
MRubyObject* mruby_context_hash_get (MRubyContext* self, MRubyValue* hash, MRubyValue* key);
MRubyObject* mruby_context_hash_fetch (MRubyContext* self, MRubyValue* hash, MRubyValue* key, MRubyValue* def);
MRubyObject* mruby_context_hash_delete_key (MRubyContext* self, MRubyValue* hash, MRubyValue* key);
MRubyObject* mruby_context_hash_keys (MRubyContext* self, MRubyValue* hash);
MRubyObject* mruby_context_check_hash_type (MRubyContext* self, MRubyValue* hash);
MRubyObject* mruby_context_hash_empty_p (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_hash_clear (MRubyContext* self, MRubyValue* hash);
MRubyObject* mruby_context_vm_special_get (MRubyContext* self, MRubySymbol foo1);
void mruby_context_vm_special_set (MRubyContext* self, MRubySymbol foo1, MRubyValue* foo2);
MRubyObject* mruby_context_vm_iv_get (MRubyContext* self, MRubySymbol foo1);
void mruby_context_vm_iv_set (MRubyContext* self, MRubySymbol foo1, MRubyValue* foo2);
MRubyObject* mruby_context_vm_cv_get (MRubyContext* self, MRubySymbol foo1);
void mruby_context_vm_cv_set (MRubyContext* self, MRubySymbol foo1, MRubyValue* foo2);
MRubyObject* mruby_context_vm_const_get (MRubyContext* self, MRubySymbol foo1);
void mruby_context_vm_const_set (MRubyContext* self, MRubySymbol foo1, MRubyValue* foo2);
MRubyObject* mruby_context_const_get (MRubyContext* self, MRubyValue* foo1, MRubySymbol foo2);
void mruby_context_const_set (MRubyContext* self, MRubyValue* foo1, MRubySymbol foo2, MRubyValue* foo3);
gboolean mruby_context_const_defined (MRubyContext* self, MRubyValue* foo1, MRubySymbol foo2);
void mruby_context_const_remove (MRubyContext* self, MRubyValue* foo1, MRubySymbol foo2);
gboolean mruby_context_iv_p (MRubyContext* self, MRubySymbol sym);
void mruby_context_iv_check (MRubyContext* self, MRubySymbol sym);
MRubyObject* mruby_context_iv_get (MRubyContext* self, MRubyValue* obj, MRubySymbol sym);
void mruby_context_iv_set (MRubyContext* self, MRubyValue* obj, MRubySymbol sym, MRubyValue* v);
gboolean mruby_context_iv_defined (MRubyContext* self, MRubyValue* foo1, MRubySymbol foo2);
MRubyObject* mruby_context_iv_remove (MRubyContext* self, MRubyValue* obj, MRubySymbol sym);
void mruby_context_iv_copy (MRubyContext* self, MRubyValue* dst, MRubyValue* src);
gboolean mruby_context_const_defined_at (MRubyContext* self, MRubyValue* mod, MRubySymbol id);
MRubyObject* mruby_context_gv_get (MRubyContext* self, MRubySymbol sym);
void mruby_context_gv_set (MRubyContext* self, MRubySymbol sym, MRubyValue* val);
void mruby_context_gv_remove (MRubyContext* self, MRubySymbol sym);
MRubyObject* mruby_context_cv_get (MRubyContext* self, MRubyValue* mod, MRubySymbol sym);
void mruby_context_cv_set (MRubyContext* self, MRubyValue* mod, MRubySymbol sym, MRubyValue* v);
gboolean mruby_context_cv_defined (MRubyContext* self, MRubyValue* mod, MRubySymbol sym);
MRubyObject* mruby_context_mod_constants (MRubyContext* self, MRubyValue* mod);
MRubyObject* mruby_context_f_global_variables (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_obj_instance_variables (MRubyContext* self, MRubyValue* foo1);
MRubyObject* mruby_context_mod_class_variables (MRubyContext* self, MRubyValue* foo1);
MRubySymbol mruby_context_class_sym (MRubyContext* self, void* c, void* outer);
void mruby_context_gc_mark_gv (MRubyContext* self);
void mruby_context_gc_free_gv (MRubyContext* self);
void* mruby_context_define_class (MRubyContext* self, const gchar* foo1, void* foo2);
void* mruby_context_define_module (MRubyContext* self, const gchar* foo1);
MRubyObject* mruby_context_singleton_class (MRubyContext* self, MRubyValue* foo1);
void mruby_context_include_module (MRubyContext* self, void* foo1, void* foo2);
void mruby_context_define_class_method (MRubyContext* self, void* foo1, const gchar* foo2, mrb_func_t foo3, guint32 foo4);
void mruby_context_define_module_function (MRubyContext* self, void* foo1, const gchar* foo2, mrb_func_t foo3, guint32 foo4);
void mruby_context_define_const (MRubyContext* self, void* foo1, const gchar* name, MRubyValue* foo2);
void mruby_context_undef_method (MRubyContext* self, void* foo1, const gchar* foo2);
void mruby_context_undef_class_method (MRubyContext* self, void* foo1, const gchar* foo2);
MRubyObject* mruby_context_instance_new (MRubyContext* self, MRubyValue* cv);
void* mruby_context_class_new (MRubyContext* self, void* super);
void* mruby_context_module_new (MRubyContext* self);
gboolean mruby_context_class_defined (MRubyContext* self, const gchar* name);
void* mruby_context_class_get_under (MRubyContext* self, void* outer, const gchar* name);
void* mruby_context_module_get_under (MRubyContext* self, void* outer, const gchar* name);
MRubyObject* mruby_context_notimplement_m (MRubyContext* self, MRubyValue* foo1);
MRubyObject* mruby_context_obj_dup (MRubyContext* self, MRubyValue* obj);
MRubyObject* mruby_context_check_to_integer (MRubyContext* self, MRubyValue* val, const gchar* method);
gboolean mruby_context_obj_respond_to (MRubyContext* self, void* c, MRubySymbol mid);
void* mruby_context_define_class_under (MRubyContext* self, void* outer, const gchar* name, void* super);
void* mruby_context_define_module_under (MRubyContext* self, void* outer, const gchar* name);
MRubyObject* mruby_context_funcall_argv (MRubyContext* self, MRubyValue* foo1, MRubySymbol foo2, gint foo3, MRubyValue** foo4, int foo4_length1);
MRubyObject* mruby_context_funcall_with_block (MRubyContext* self, MRubyValue* foo1, MRubySymbol foo2, gint foo3, MRubyValue** foo4, int foo4_length1, MRubyValue* foo5);
MRubySymbol mruby_context_intern_cstr (MRubyContext* self, const gchar* foo1);
MRubySymbol mruby_context_intern (MRubyContext* self, const gchar* foo1, gsize foo2);
MRubySymbol mruby_context_intern_static (MRubyContext* self, const gchar* foo1, gsize foo2);
MRubySymbol mruby_context_intern_str (MRubyContext* self, MRubyValue* foo1);
MRubyObject* mruby_context_check_intern_cstr (MRubyContext* self, const gchar* foo1);
MRubyObject* mruby_context_check_intern (MRubyContext* self, const gchar* foo1, gsize foo2);
MRubyObject* mruby_context_check_intern_str (MRubyContext* self, MRubyValue* foo1);
gchar* mruby_context_sym2name (MRubyContext* self, MRubySymbol foo1);
MRubyObject* mruby_context_sym2str (MRubyContext* self, MRubySymbol foo1);
void* mruby_context_malloc (MRubyContext* self, gsize foo1);
void* mruby_context_calloc (MRubyContext* self, gsize foo1, gsize foo2);
void* mruby_context_realloc (MRubyContext* self, void* foo1, gsize foo2);
void* mruby_context_realloc_simple (MRubyContext* self, void* foo1, gsize foo2);
void* mruby_context_malloc_simple (MRubyContext* self, gsize foo1);
void mruby_context_free (MRubyContext* self, void* foo1);
MRubyObject* mruby_context_str_new (MRubyContext* self, const gchar* p, gsize len);
MRubyString* mruby_context_str_new_cstr (MRubyContext* self, const gchar* foo1);
MRubyObject* mruby_context_str_new_static (MRubyContext* self, const gchar* p, gsize len);
void mruby_context_close (MRubyContext* self);
void* mruby_context_default_allocf (MRubyContext* self, void* foo1, gsize foo2, void* foo3);
MRubyObject* mruby_context_top_self (MRubyContext* self);
MRubyObject* mruby_context_run (MRubyContext* self, void* foo1, MRubyValue* foo2);
MRubyObject* mruby_context_toplevel_run (MRubyContext* self, void* foo1);
void mruby_context_p (MRubyContext* self, MRubyValue* foo1);
MRubySymbol mruby_context_obj_to_sym (MRubyContext* self, MRubyValue* name);
gboolean mruby_context_obj_eq (MRubyContext* self, MRubyValue* foo1, MRubyValue* foo2);
gboolean mruby_context_obj_equal (MRubyContext* self, MRubyValue* foo1, MRubyValue* foo2);
gboolean mruby_context_equal (MRubyContext* self, MRubyValue* obj1, MRubyValue* obj2);
MRubyObject* mruby_context_Integer (MRubyContext* self, MRubyValue* val);
MRubyObject* mruby_context_Float (MRubyContext* self, MRubyValue* val);
MRubyObject* mruby_context_inspect (MRubyContext* self, MRubyValue* obj);
gboolean mruby_context_eql (MRubyContext* self, MRubyValue* obj1, MRubyValue* obj2);
void mruby_context_garbage_collect (MRubyContext* self);
void mruby_context_full_gc (MRubyContext* self);
void mruby_context_incremental_gc (MRubyContext* self);
MRubyObject* mruby_context_any_to_s (MRubyContext* self, MRubyValue* obj);
gchar* mruby_context_obj_classname (MRubyContext* self, MRubyValue* obj);
void* mruby_context_obj_class (MRubyContext* self, MRubyValue* obj);
MRubyObject* mruby_context_class_path (MRubyContext* self, void* c);
gboolean mruby_context_obj_is_kind_of (MRubyContext* self, MRubyValue* obj, void* c);
MRubyObject* mruby_context_obj_inspect (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_obj_clone (MRubyContext* self, MRubyValue* _self_);
MRubyObject* mruby_context_exc_new (MRubyContext* self, void* c, const gchar* ptr, gsize len);
void mruby_context_print_backtrace (MRubyContext* self);
void mruby_context_print_error (MRubyContext* self);
MRubyObject* mruby_context_yield (MRubyContext* self, MRubyValue* b, MRubyValue* arg);
MRubyObject* mruby_context_yield_argv (MRubyContext* self, MRubyValue* b, gint argc, MRubyValue** argv, int argv_length1);
MRubyObject* mruby_context_yield_with_class (MRubyContext* self, MRubyValue* b, gint argc, MRubyValue** argv, int argv_length1, MRubyValue* _self_, void* c);
void mruby_context_gc_protect (MRubyContext* self, MRubyValue* obj);
MRubyObject* mruby_context_to_int (MRubyContext* self, MRubyValue* val);
void mruby_context_define_alias (MRubyContext* self, void* klass, const gchar* name1, const gchar* name2);
gchar* mruby_context_class_name (MRubyContext* self, void* klass);
void mruby_context_define_global_const (MRubyContext* self, const gchar* name, MRubyValue* val);
MRubyObject* mruby_context_attr_get (MRubyContext* self, MRubyValue* obj, MRubySymbol id);
gboolean mruby_context_respond_to (MRubyContext* self, MRubyValue* obj, MRubySymbol mid);
gboolean mruby_context_obj_is_instance_of (MRubyContext* self, MRubyValue* obj, void* c);
MRubyObject* mruby_context_fiber_resume (MRubyContext* self, MRubyValue* fib, gint argc, MRubyValue** argv, int argv_length1);
MRubyObject* mruby_context_fiber_yield (MRubyContext* self, gint argc, MRubyValue** argv, int argv_length1);
void* mruby_context_alloca (MRubyContext* self, gsize foo1);
void mruby_context_show_version (MRubyContext* self);
void mruby_context_show_copyright (MRubyContext* self);
MRubyContext* mruby_context_new (void);
MRubyContext* mruby_context_new (void);
mrb_state* mruby_context_get__base_ (MRubyContext* self);


G_END_DECLS

#endif
